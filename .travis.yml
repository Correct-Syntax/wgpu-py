matrix:
  include:
    - os: linux
      rust: nightly
      compiler: gcc
      dist: xenial
      language: rust
    - os: windows
      rust: nightly
      language: rust
    - env: MACOSX_DEPLOYMENT_TARGET=10.9
      os: osx
      rust: nightly
      osx_image: xcode9.4
      compiler: clang
      language: rust
addons:
  apt:
    packages:
    - cmake
    - libglfw3-dev
  homebrew:
    update: true
    packages:
    - cmake
    - glfw3

before_install:
- if [[ $TRAVIS_OS_NAME == "windows" ]]; then choco install make; fi

script:
  - git clone https://github.com/gfx-rs/wgpu.git wgpu-native
  - cd wgpu-native
  - git checkout v0.4
  # TODO: enable GL backend
  - (cd wgpu-native && cargo check --all-features)
  - if [[ $TRAVIS_OS_NAME == "osx" ]]; then (cd wgpu-native && cargo check --features gfx-backend-vulkan); fi
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then cargo check --release; fi
  - if [[ $TRAVIS_RUST_VERSION == "nightly" ]]; then cargo +nightly install cbindgen; fi
  - if [[ $TRAVIS_RUST_VERSION == "nightly" ]] && [[ $TRAVIS_OS_NAME == "windows" ]]; then
      wget -nc -O glfw.zip https://github.com/glfw/glfw/archive/3.3.zip &&
      7z x glfw.zip -oglfw &&
      cd glfw/glfw-3.3 &&
      export GLFW3_INCLUDE_DIR=`pwd`/include &&
      export GLFW3_INSTALL_DIR=`pwd`/install &&
      cmake . -DCMAKE_INSTALL_PREFIX=$GLFW3_INSTALL_DIR -DCMAKE_GENERATOR_PLATFORM=x64 &&
      cmake --build . --target install &&
      cd ../.. &&
      export CMAKE_PREFIX_PATH=$GLFW3_INSTALL_DIR &&
      make example-compute example-triangle VERBOSE=1;
    fi
  - make lib-native ffi/wgpu.h VERBOSE=1;
