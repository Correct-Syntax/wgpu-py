trigger:
- master

variables:
  NAME: wgpu

jobs:
- job: Build
  strategy:
    matrix:
      Linux:
        vmImage: ubuntu-16.04
      MacOS:
        vmImage: macOS-10.14
        MACOSX_DEPLOYMENT_TARGET: '10.13'
      Windows:
        vmImage: vs2017-win2016
  pool:
    vmImage: $(vmImage)
  steps:
  - task: UsePythonVersion@0
    displayName: Select Python 3.6
    inputs:
      versionSpec: '3.6'
  - task: Bash@3
    displayName: Install development requirements
    inputs:
      targetType: inline
      script: |
        python -m pip install -U pip setuptools wheel
        pip install -r dev-requirements.txt
  - task: Bash@3
    displayName: Lint
    inputs:
      targetType: inline
      script: |
        black --check $NAME tests examples
  - task: Bash@3
    displayName: Build wheel and install in development mode
    inputs:
      targetType: inline
      script: |
        python setup.py develop
        python setup.py bdist_wheel
  - task: Bash@3
    displayName: Test
    inputs:
      targetType: inline
      script: |
        pytest --disable-warnings --junit-xml=results.xml || true

        # Fail the task if results.xml was not created
        if [[ ! -f results.xml ]]
        then
          echo "##vso[task.logissue type=error]No test results were found"
          exit 1
        fi
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: results.xml
      mergeTestResults: true
      failTaskOnFailedTests: true
      testRunTitle: Test $(vmImage)
  - task: Bash@3
    displayName: Test (packaged)
    inputs:
      targetType: inline
      script: |
        python setup.py develop --uninstall
        rm -rf ./wgpu ./build ./egg-info
        cd ../pkgtest
        pip install dist/*.whl
        pytest --disable-warnings --junit-xml=results-packaged.xml || true

        # Fail the task if results-packaged.xml was not created
        if [[ ! -f results-packaged.xml ]]
        then
          echo "##vso[task.logissue type=error]No test results were found"
          exit 1
        fi
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: results-packaged.xml
      mergeTestResults: true
      failTaskOnFailedTests: true
      testRunTitle: Test $(vmImage) (packaged)
  - task: PublishBuildArtifacts@1
    displayName: Publish wheels
    inputs:
      pathtoPublish: dist
      artifactName: wheels
- job: Release
  dependsOn: Build
  condition: succeeded()
  pool:
    vmImage: ubuntu-16.04
  steps:
  - checkout: none
  - task: DownloadBuildArtifacts@0
    displayName: Download wheels
    inputs:
      artifactName: wheels
      downloadPath: dist
  - task: Bash@3
    displayName: Test (packaged)
    inputs:
      targetType: inline
      script: |
        ls -la
  - task: GithubRelease@0
    displayName: GitHub Release
    inputs:
      gitHubConnection: almarklein
      repositoryName: almarklein/wgpu-py
      assets: '*.whl'
      isDraft: true
      assetUploadMode: replace
